# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3

jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.7.3-stretch
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            sudo chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
        
      # run lints!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

# Refererd from this link: https://circleci.com/docs/building-docker-images/
  push-docker-images:
    docker:
      - image: "cimg/python:3.10"
        user: root
    steps:
      - checkout
      - setup_remote_docker:
          version: "20.10.14"
          docker_layer_caching: false
      - run:
          name: push to docker hub
          command: |
            docker logout docker.io
            docker login docker.io -u $DOCKER_USERNAME --password $DOCKER_PASSWORD
            docker build . -t trunghieu9506/hieuhuynh-project-capstone:v1.0.0
            docker tag hieuhuynh-project-capstone trunghieu9506/hieuhuynh-project-capstone:v1.0.0
            docker push docker.io/trunghieu9506/hieuhuynh-project-capstone:v1.0.0

  # Reference from this source: https://circleci.com/developer/orbs/orb/circleci/aws-eks
  create-aws-cluster:
    docker:
      - image: "cimg/python:3.10"
    steps:
      - checkout
      - aws-eks/create-cluster:
          cluster-name: hieuhuynh-capstone-cluster-1
          aws-region: us-east-1
          node-type: t3.medium
          nodes-min: 1
          nodes-max: 3                    

  create-deployment:
    docker:
      - image: "cimg/python:3.10"
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: hieuhuynh-capstone-cluster-1
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: deployment.yaml
          show-kubectl-command: true
      - kubernetes/create-or-update-resource:
          resource-file-path: service.yaml
          show-kubectl-command: true    
      - kubernetes/create-or-update-resource:
          resource-file-path: eks.yaml
          show-kubectl-command: true
      - run:
          command: |
            kubectl get nodes -o wide
            kubectl get all 
            kubectl get svc -o wide
            kubectl describe pods

workflows:
  deployment:
    jobs:
      - build
      - push-docker-images:
          requires:
            - "build"
      - create-aws-cluster:
          requires:
            - "build"
      - create-deployment:
          requires: [push-docker-images, create-aws-cluster]